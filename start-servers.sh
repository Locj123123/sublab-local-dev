#!/bin/bash

# SubLab Local Development Server Startup Script
# –¶–µ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞—î –ª–∏—à–µ —ñ—Å–Ω—É—é—á—ñ —Å–µ—Ä–≤–µ—Ä–∏ SubLab –ª–æ–∫–∞–ª—å–Ω–æ

echo "üöÄ –ó–∞–ø—É—Å–∫ SubLab —Å–µ—Ä–≤–µ—Ä—ñ–≤ –ª–æ–∫–∞–ª—å–Ω–æ..."
echo "=================================="

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
    echo "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker Desktop"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
    echo "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker Compose"
    exit 1
fi

echo "‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ"
echo ""

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª .env —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
if [ ! -f ".env" ]; then
    echo "üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É .env –∑ –±–∞–∑–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏..."
    cat > .env << EOF
# –õ–æ–∫–∞–ª—å–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö
DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/sublab_db
POSTGRES_DB=sublab_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123

# Redis
REDIS_URL=redis://localhost:6379

# API –∫–ª—é—á—ñ (–¥–æ–¥–∞–π—Ç–µ —Å–≤–æ—ó)
OPENAI_API_KEY=
ELEVENLABS_API_KEY=
REPLICATE_API_TOKEN=

# Supabase (–¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ)
SUPABASE_URL=http://localhost:5432
SUPABASE_KEY=local-development-key
VITE_SUPABASE_URL=http://localhost:5432
VITE_SUPABASE_KEY=local-development-key
EOF
    echo "‚úÖ –§–∞–π–ª .env —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ –±–∞–∑–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —è–∫—ñ —Å–µ—Ä–≤—ñ—Å–∏ —ñ—Å–Ω—É—é—Ç—å
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
echo "==============================="

available_services=()
profiles_to_start=()

# –ë–∞–∑–æ–≤—ñ —Å–µ—Ä–≤—ñ—Å–∏ (–∑–∞–≤–∂–¥–∏ –∑–∞–ø—É—Å–∫–∞—é—Ç—å—Å—è)
available_services+=("postgres" "redis" "frontend" "chat-assistant")

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–∞–ø–æ–∫ –¥–ª—è SubLab —Å–µ—Ä–≤—ñ—Å—ñ–≤
declare -A sublab_services=(
    ["sublab-v1"]="SubLab V1 (Orchestrator)"
    ["sublab-v2"]="SubLab V2 (Modules & Images)"
    ["sublab-v3"]="SubLab V3 (Audio Generation)"
    ["sublab-v4"]="SubLab V4 (Audio Assembly)"
    ["sublab-v5"]="SubLab V5 (Audio Mixing)"
)

for service in "${!sublab_services[@]}"; do
    if [ -d "./$service" ]; then
        echo "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ: ${sublab_services[$service]} (./$service)"
        available_services+=("$service")
        profiles_to_start+=("$service")
    else
        echo "‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${sublab_services[$service]} (–ø–∞–ø–∫–∞ ./$service –Ω–µ —ñ—Å–Ω—É—î)"
    fi
done

echo ""
echo "üìã –°–µ—Ä–≤—ñ—Å–∏ –¥–ª—è –∑–∞–ø—É—Å–∫—É:"
echo "======================="
echo "‚Ä¢ PostgreSQL (–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö)"
echo "‚Ä¢ Redis (–ö–µ—à —Ç–∞ —á–µ—Ä–≥–∏)"
echo "‚Ä¢ Frontend (React App)"
echo "‚Ä¢ Chat Assistant API"

for service in "${!sublab_services[@]}"; do
    if [ -d "./$service" ]; then
        echo "‚Ä¢ ${sublab_services[$service]}"
    fi
done

echo ""

# –ó—É–ø–∏–Ω—è—î–º–æ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo "üõë –ó—É–ø–∏–Ω–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
docker-compose down

# –§–æ—Ä–º—É—î–º–æ –∫–æ–º–∞–Ω–¥—É –∑–∞–ø—É—Å–∫—É –∑ –ø—Ä–æ—Ñ—ñ–ª—è–º–∏
compose_command="docker-compose"
if [ ${#profiles_to_start[@]} -gt 0 ]; then
    for profile in "${profiles_to_start[@]}"; do
        compose_command="$compose_command --profile $profile"
    done
fi
compose_command="$compose_command up --build -d"

# –ó–±–∏—Ä–∞—î–º–æ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏
echo "üî® –ó–±—ñ—Ä–∫–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
echo "–ö–æ–º–∞–Ω–¥–∞: $compose_command"
eval $compose_command

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –≤—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏ –∑–∞–ø—É—Å—Ç—è—Ç—å—Å—è
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
sleep 15

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤:"
echo "==================="

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–∑–æ–≤—ñ —Å–µ—Ä–≤—ñ—Å–∏
if docker ps --format "table {{.Names}}" | grep -q "sublab-postgres"; then
    echo "‚úÖ PostgreSQL (–ø–æ—Ä—Ç 5432) - –ø—Ä–∞—Ü—é—î"
else
    echo "‚ùå PostgreSQL (–ø–æ—Ä—Ç 5432) - –Ω–µ –ø—Ä–∞—Ü—é—î"
fi

if docker ps --format "table {{.Names}}" | grep -q "sublab-redis"; then
    echo "‚úÖ Redis (–ø–æ—Ä—Ç 6379) - –ø—Ä–∞—Ü—é—î"
else
    echo "‚ùå Redis (–ø–æ—Ä—Ç 6379) - –Ω–µ –ø—Ä–∞—Ü—é—î"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ–±-—Å–µ—Ä–≤—ñ—Å–∏
web_services=(
    "frontend:5173:Frontend"
    "chat-assistant:8001:Chat Assistant API"
)

for service in "${!sublab_services[@]}"; do
    if [ -d "./$service" ]; then
        port=$((8002 + ${service: -1} - 1))
        web_services+=("$service:$port:${sublab_services[$service]}")
    fi
done

for service_info in "${web_services[@]}"; do
    IFS=':' read -r service port name <<< "$service_info"
    
    if [ "$service" = "frontend" ]; then
        if curl -s -f "http://localhost:$port" > /dev/null 2>&1; then
            echo "‚úÖ $name (–ø–æ—Ä—Ç $port) - –ø—Ä–∞—Ü—é—î"
        else
            echo "‚ùå $name (–ø–æ—Ä—Ç $port) - –Ω–µ –ø—Ä–∞—Ü—é—î"
        fi
    else
        if curl -s -f "http://localhost:$port/health" > /dev/null 2>&1; then
            echo "‚úÖ $name (–ø–æ—Ä—Ç $port) - –ø—Ä–∞—Ü—é—î"
        else
            echo "‚ùå $name (–ø–æ—Ä—Ç $port) - –Ω–µ –ø—Ä–∞—Ü—é—î"
        fi
    fi
done

echo ""
echo "üéâ –ó–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:"
echo "===================="
echo "‚Ä¢ PostgreSQL Database: localhost:5432"
echo "‚Ä¢ Redis Cache: localhost:6379"
echo "‚Ä¢ Frontend (React App): http://localhost:5173"
echo "‚Ä¢ Chat Assistant API: http://localhost:8001"

for service in "${!sublab_services[@]}"; do
    if [ -d "./$service" ]; then
        port=$((8002 + ${service: -1} - 1))
        echo "‚Ä¢ ${sublab_services[$service]}: http://localhost:$port"
    fi
done

echo ""
echo "üìù –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
echo "==================="
echo "‚Ä¢ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–≥–∏: docker-compose logs -f [service-name]"
echo "‚Ä¢ –ó—É–ø–∏–Ω–∏—Ç–∏ –≤—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏: docker-compose down"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤—ñ—Å: docker-compose restart [service-name]"
echo "‚Ä¢ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å: docker-compose ps"
echo "‚Ä¢ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –ë–î: psql postgresql://postgres:postgres123@localhost:5432/sublab_db"
echo ""
echo "üí° –©–æ–± –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π SubLab —Å–µ—Ä–≤—ñ—Å:"
echo "1. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–∞–ø–∫—É ./sublab-vX (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ ./sublab-v1)"
echo "2. –î–æ–¥–∞–π—Ç–µ Dockerfile –≤ –ø–∞–ø–∫—É"
echo "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç - —Å–µ—Ä–≤—ñ—Å –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏—è–≤–ª–µ–Ω–æ!"
echo ""